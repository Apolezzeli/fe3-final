{"ast":null,"code":"var _jsxFileName = \"/home/apolezzeli/Documents/digital_house/2023/bimestre_01/FE_III/fe3-final/src/Components/utils/global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useReducer, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialThemeState = {\n  theme: \"light\",\n  color: \"light\"\n};\nconst initialDentistState = [];\nexport const ContextGlobal = /*#__PURE__*/createContext();\n\nconst themeReducer = (state, action) => {\n  console.log(\"state\", state);\n\n  switch (action.type) {\n    case \"SET_LIGHT\":\n      return { ...state,\n        theme: \"light\",\n        color: \"light\"\n      };\n\n    case \"SET_DARK\":\n      return { ...state,\n        theme: \"dark\",\n        color: \"dark\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextGlobalProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [dentists, setDentists] = useState(initialDentistState);\n  const [theme, dispatchTheme] = useReducer(themeReducer, initialThemeState);\n  const elementsValue = {\n    dentists,\n    setDentists,\n    theme,\n    dispatchTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: elementsValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}; // export default ContextGlobalProvider;\n\n_s(ContextGlobalProvider, \"JZyDeOXzFwwMJag23jRrsz/z25Y=\");\n\n_c = ContextGlobalProvider;\nexport const useContextGlobal = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useContextGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextGlobalProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","useState","initialThemeState","theme","color","initialDentistState","ContextGlobal","themeReducer","state","action","console","log","type","ContextGlobalProvider","children","dentists","setDentists","dispatchTheme","elementsValue","useContextGlobal"],"sources":["/home/apolezzeli/Documents/digital_house/2023/bimestre_01/FE_III/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useReducer, useState } from \"react\";\n\nexport const initialThemeState = {theme: \"light\", color: \"light\"};\nconst initialDentistState = [];\n\nexport const ContextGlobal = createContext();\n\nconst themeReducer = (state, action) => {console.log(\"state\",state);\n  switch (action.type) {\n    case \"SET_LIGHT\":\n      return { ...state, theme:\"light\", color: \"light\" };\n    case \"SET_DARK\":\n      return { ...state, theme:\"dark\", color: \"dark\" };\n    default:\n      return state;\n  }\n};\n\n\nexport const ContextGlobalProvider = ({ children }) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [dentists, setDentists] = useState(initialDentistState);\n  const [theme, dispatchTheme] = useReducer(themeReducer, initialThemeState);\n\n  const elementsValue = {\n    dentists,\n    setDentists,\n    theme,\n    dispatchTheme,\n  };\n\n  return (\n    <ContextGlobal.Provider value={elementsValue}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n\n// export default ContextGlobalProvider;\nexport const useContextGlobal = () => useContext(ContextGlobal);\n"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,QAAhD,QAAgE,OAAhE;;AAEA,OAAO,MAAMC,iBAAiB,GAAG;EAACC,KAAK,EAAE,OAAR;EAAiBC,KAAK,EAAE;AAAxB,CAA1B;AACP,MAAMC,mBAAmB,GAAG,EAA5B;AAEA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,EAAnC;;AAEP,MAAMS,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAACC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBH,KAApB;;EACvC,QAAQC,MAAM,CAACG,IAAf;IACE,KAAK,WAAL;MACE,OAAO,EAAE,GAAGJ,KAAL;QAAYL,KAAK,EAAC,OAAlB;QAA2BC,KAAK,EAAE;MAAlC,CAAP;;IACF,KAAK,UAAL;MACE,OAAO,EAAE,GAAGI,KAAL;QAAYL,KAAK,EAAC,MAAlB;QAA0BC,KAAK,EAAE;MAAjC,CAAP;;IACF;MACE,OAAOI,KAAP;EANJ;AAQD,CATD;;AAYA,OAAO,MAAMK,qBAAqB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACrD;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAACI,mBAAD,CAAxC;EACA,MAAM,CAACF,KAAD,EAAQc,aAAR,IAAyBjB,UAAU,CAACO,YAAD,EAAeL,iBAAf,CAAzC;EAEA,MAAMgB,aAAa,GAAG;IACpBH,QADoB;IAEpBC,WAFoB;IAGpBb,KAHoB;IAIpBc;EAJoB,CAAtB;EAOA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEC,aAA/B;IAAA,UACGJ;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAjBM,C,CAmBP;;GAnBaD,qB;;KAAAA,qB;AAoBb,OAAO,MAAMM,gBAAgB,GAAG;EAAA;;EAAA,OAAMpB,UAAU,CAACO,aAAD,CAAhB;AAAA,CAAzB;;IAAMa,gB"},"metadata":{},"sourceType":"module"}